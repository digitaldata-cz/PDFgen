on:
  release:
    types: [ prereleased ]

jobs:

  releases-matrix:
    name: Release binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
 
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set versions
      uses: actions/github-script@v4
      id: set_version
      with:
        script: |
          const tag = context.ref.substring(10)
          const no_v = tag.replace('v', '')
          core.setOutput('tag', tag)
          core.setOutput('no-v', no_v)

    - uses: wangyoucao577/go-release-action@v1.30
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        build_flags: -a -trimpath
        ldflags: -s -w -X main.appVersion=${{ steps.set_version.outputs.no-v }}
        extra_files: |
          README.md
          LICENSE